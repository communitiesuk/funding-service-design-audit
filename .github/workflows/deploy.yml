#TODO Uncomment this workflow to use a custom workflow, or delete the file if not
#TODO Find all 'TEMPLATE' references in this file & Replace with your repo identifier
name: Deploy to Gov PaaS

on:
  workflow_dispatch:
  push:
    paths-ignore:
      - '**/README.md'

jobs:
  testing:
    runs-on: ubuntu-latest
    environment: Dev
    steps:
      - name: checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.1
      - name: create python env
        run: python -m venv .venv
      - name: install dependencies
        run: source .venv/bin/activate && python -m pip install --upgrade pip && python -m pip install -r requirements-dev.txt
        # TODO: Uncomment the next two lines if this repo has static assets like css/js (creates frontend/static/dist)
      - name: build govuk assets
        run: source .venv/bin/activate && python build.py
      - name: run unit tests
        run: source .venv/bin/activate && python -m pytest .
  deploy_dev:
    needs: testing
    runs-on: ubuntu-latest
    environment: Dev
    steps:
      - name: checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.1
      - name: create python env
        run: python -m venv .venv
      - name: install dependencies
        run: source .venv/bin/activate && python -m pip install --upgrade pip && pip install -r requirements.txt
        #TODO Uncomment the next two lines if this repo has static assets like css/js (creates frontend/static/dist)
      - name: build govuk assets
        run: source .venv/bin/activate && python build.py
      - name: Deploy to Gov PaaS
        uses: citizen-of-planet-earth/cf-cli-action@v2
        with:
          cf_api:      ${{secrets.CF_API}}
          cf_org:      ${{secrets.CF_ORG}}
          cf_space:    ${{secrets.CF_SPACE }}
          cf_username: ${{secrets.CF_USER}}
          cf_password: ${{secrets.CF_PASSWORD}}
          command: push funding-service-design-TEMPLATE-dev -f manifest-dev.yml
#TODO Uncomment the next name block if using the notification service
#      - name: Apply network policy for notification service
#        uses: citizen-of-planet-earth/cf-cli-action@v2
#        with:
#          cf_api:      ${{secrets.CF_API}}
#          cf_org:      ${{secrets.CF_ORG}}
#          cf_space:    ${{secrets.CF_SPACE }}
#          cf_username: ${{secrets.CF_USER}}
#          cf_password: ${{secrets.CF_PASSWORD}}
#          command: add-network-policy funding-service-design-TEMPLATE-dev funding-service-design-notification-dev --protocol tcp --port 8080

  security:
    needs: deploy_dev
    runs-on: ubuntu-latest
    environment: Dev
    steps:
      - name: checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.1
      - name: install dependencies
        run: python -m pip install --upgrade pip && python -m pip install -r requirements.txt
        #TODO Uncomment the next two lines and replace ./demo with any root relative directorie you want bandit to security check
#      - name: Bandit
#        run: bandit -r ./demo
      - name: Safety
        run: safety check
      - name: ZAP Scan
        uses: zaproxy/action-full-scan@v0.3.0
        with:
          target: 'https://funding-service-design-TEMPLATE-dev.london.cloudapps.digital/'
          allow_issue_writing: False

  deploy_test:
    if: github.ref == 'refs/heads/main'
    needs: security
    runs-on: ubuntu-latest
    environment: test
    steps:
      - name: checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.1
      - name: create python env
        run: python -m venv .venv
      - name: install dependencies
        run: source .venv/bin/activate && python -m pip install --upgrade pip && pip install -r requirements.txt
        #TODO Uncomment the next two lines if using govuk frontend assets
      - name: build govuk assets
        run: source .venv/bin/activate && python build.py
      - name: Deploy to Gov PaaS
        uses: citizen-of-planet-earth/cf-cli-action@v2
        with:
          cf_api:      ${{secrets.CF_API}}
          cf_org:      ${{secrets.CF_ORG}}
          cf_space:    ${{secrets.CF_SPACE }}
          cf_username: ${{secrets.CF_USER}}
          cf_password: ${{secrets.CF_PASSWORD}}
          #TODO Ensure that the github secrets in the following command are correctly set
          command: push funding-service-design-TEMPLATE-test -f manifest-test.yml --var RSA256_PRIVATE_KEY_BASE64="${{secrets.RSA256_PRIVATE_KEY_BASE64}}" --var RSA256_PUBLIC_KEY_BASE64="${{secrets.RSA256_PUBLIC_KEY_BASE64}}" --var SECRET_KEY="${{secrets.SECRET_KEY}}" --var SESSION_COOKIE_NAME="${{secrets.SESSION_COOKIE_NAME}}"
#TODO Uncomment the next name block if using the notification service
#      - name: Apply network policy for notification service
#        uses: citizen-of-planet-earth/cf-cli-action@v2
#        with:
#          cf_api:      ${{secrets.CF_API}}
#          cf_org:      ${{secrets.CF_ORG}}
#          cf_space:    ${{secrets.CF_SPACE }}
#          cf_username: ${{secrets.CF_USER}}
#          cf_password: ${{secrets.CF_PASSWORD}}
#          command: add-network-policy funding-service-design-TEMPLATE-test funding-service-design-notification-test --protocol tcp --port 8080

  run_performance_tests:
    needs: deploy_test
    runs-on: ubuntu-latest
    environment: test
    steps:
      - name: checkout code
        uses: actions/checkout@main
        with:
          repository: communitiesuk/funding-service-design-performance-tests
          path: ./funding-service-design-performance-tests
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.1
      - name: create python env
        run: python -m venv .venv
      - name: install dependencies
        run: source .venv/bin/activate && python -m pip install --upgrade pip && pip install -r ./funding-service-design-performance-tests/requirements.txt

      - name: Run performance tests
        run: ls && python -m pip install locust && python -m locust
        working-directory: ./funding-service-design-performance-tests
      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v2
        with:
          name: performance-test-report
          path: ./funding-service-design-performance-tests/locust_html_report.html
          retention-days: 5
